{"ast":null,"code":"var _jsxFileName = \"/Users/mandeal15/Desktop/facerecognitionbrain/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Rank from './components/Rank/Rank';\nimport Particles from \"react-tsparticles\";\nimport { loadFull } from \"tsparticles\";\nimport Clarifai from 'clarifai';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst app = new Clarifai.App({\n  apiKey: '81da36648fe246de93ce115dbc8b1964'\n});\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputImage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      this.setState({\n        box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageURL: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => this.displayFaceBox(this.calculateFaceLocation(response))).catch(err => console.log(err));\n    };\n\n    this.state = {\n      input: '',\n      imageURL: '',\n      box: {}\n    };\n  }\n\n  render() {\n    const particlesInit = async main => {\n      console.log(main); // you can initialize the tsParticles instance (main) here, adding custom shapes or presets\n      // this loads the tsparticles package bundle, it's the easiest method for getting everything ready\n      // starting from v2 you can add only the features you need reducing the bundle size\n\n      await loadFull(main);\n    };\n\n    const particlesLoaded = container => {\n      console.log(container);\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \" App\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"particles\",\n        children: /*#__PURE__*/_jsxDEV(Particles, {\n          id: \"tsparticles\",\n          init: particlesInit,\n          loaded: particlesLoaded,\n          options: {\n            background: {\n              color: {\n                value: \"linear-gradient(-45deg, #ee7752, #e73c7e, #23a6d5, #23d5ab)\"\n              }\n            },\n            fpsLimit: 120,\n            interactivity: {\n              events: {\n                onClick: {\n                  enable: true,\n                  mode: \"push\"\n                },\n                onHover: {\n                  enable: true,\n                  mode: \"repulse\"\n                },\n                resize: true\n              },\n              modes: {\n                push: {\n                  quantity: 4\n                },\n                repulse: {\n                  distance: 200,\n                  duration: 0.4\n                }\n              }\n            },\n            particles: {\n              color: {\n                value: \"#ffffff\"\n              },\n              links: {\n                color: \"#ffffff\",\n                distance: 150,\n                enable: true,\n                opacity: 0.5,\n                width: 1\n              },\n              collisions: {\n                enable: true\n              },\n              move: {\n                direction: \"none\",\n                enable: true,\n                outModes: {\n                  default: \"bounce\"\n                },\n                random: false,\n                speed: 1,\n                straight: false\n              },\n              number: {\n                density: {\n                  enable: true,\n                  area: 800\n                },\n                value: 80\n              },\n              opacity: {\n                value: 0.5\n              },\n              shape: {\n                type: \"circle\"\n              },\n              size: {\n                value: {\n                  min: 1,\n                  max: 5\n                }\n              }\n            },\n            detectRetina: true\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n        onInputChange: this.onInputChange,\n        onButtonSubmit: this.onButtonSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Rank, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n        imageURL: this.state.imageURL\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"names":["React","Component","Navigation","Logo","ImageLinkForm","FaceRecognition","Rank","Particles","loadFull","Clarifai","app","App","apiKey","constructor","calculateFaceLocation","data","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","box","setState","onInputChange","event","input","target","value","onButtonSubmit","imageURL","state","models","predict","FACE_DETECT_MODEL","then","response","catch","err","console","log","render","particlesInit","main","particlesLoaded","container","background","color","fpsLimit","interactivity","events","onClick","enable","mode","onHover","resize","modes","push","quantity","repulse","distance","duration","particles","links","opacity","collisions","move","direction","outModes","default","random","speed","straight","number","density","area","shape","type","size","min","max","detectRetina"],"sources":["/Users/mandeal15/Desktop/facerecognitionbrain/src/App.js"],"sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\n\nimport Rank from './components/Rank/Rank';\nimport Particles from \"react-tsparticles\";\nimport { loadFull } from \"tsparticles\";\nimport Clarifai from 'clarifai';\n\nconst app = new Clarifai.App({\n  apiKey: '81da36648fe246de93ce115dbc8b1964'\n });\nclass App extends Component {\n  \n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      imageURL: '',\n      box: {},\n    }\n  }\n\n  calculateFaceLocation= (data) => {\n   const clarifaiFace =  data.outputs[0].data.regions[0].region_info.bounding_box;\n   const image = document.getElementById('inputImage');\n   const width = Number(image.width);\n   const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  }\n\n  displayFaceBox = (box) => {\n    this.setState({box});\n  }\n  onInputChange = (event) => {\n    this.setState({input: event.target.value});\n  }\n\n  onButtonSubmit = () => {\n    this.setState({imageURL: this.state.input});\n\n    app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input)\n    .then(response => this.displayFaceBox(\n    this.calculateFaceLocation(response)))\n    .catch(err =>\n      console.log(err));\n  \n \n  }\n  render() {\n\n  \n    const particlesInit = async (main) => {\n     console.log(main);\n      // you can initialize the tsParticles instance (main) here, adding custom shapes or presets\n      // this loads the tsparticles package bundle, it's the easiest method for getting everything ready\n      // starting from v2 you can add only the features you need reducing the bundle size\n      await loadFull(main);\n    };\n  \n    const particlesLoaded = (container) => {\n      console.log(container);\n    };\n    return (\n      <div className=' App'>\n        <div className='particles'>\n      <Particles\n        id=\"tsparticles\"\n        init={particlesInit}\n        loaded={particlesLoaded}\n        options={{\n          background: {\n            color: {\n              value: \"linear-gradient(-45deg, #ee7752, #e73c7e, #23a6d5, #23d5ab)\"\n            },\n          },\n          fpsLimit: 120,\n          interactivity: {\n            events: {\n              onClick: {\n                enable: true,\n                mode: \"push\",\n              },\n              onHover: {\n                enable: true,\n                mode: \"repulse\",\n              },\n              resize: true,\n            },\n            modes: {\n              push: {\n                quantity: 4,\n              },\n              repulse: {\n                distance: 200,\n                duration: 0.4,\n              },\n            },\n          },\n          particles: {\n            color: {\n              value: \"#ffffff\",\n            },\n            links: {\n              color: \"#ffffff\",\n              distance: 150,\n              enable: true,\n              opacity: 0.5,\n              width: 1,\n            },\n            collisions: {\n              enable: true,\n            },\n            move: {\n              direction: \"none\",\n              enable: true,\n              outModes: {\n                default: \"bounce\",\n              },\n              random: false,\n              speed: 1,\n              straight: false,\n            },\n            number: {\n              density: {\n                enable: true,\n                area: 800,\n              },\n              value: 80,\n            },\n            opacity: {\n              value: 0.5,\n            },\n            shape: {\n              type: \"circle\",\n            },\n            size: {\n              value: { min: 1, max: 5 },\n            },\n          },\n          detectRetina: true,\n        }}\n      />\n      </div>\n     \n    <Navigation />\n    <Logo />\n    <ImageLinkForm onInputChange={this.onInputChange} onButtonSubmit= {this.onButtonSubmit}/>\n    <Rank />\n    <FaceRecognition imageURL={this.state.imageURL} />\n \n\n   </div>\n   \n\n  );\n}\n}\n\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,WAAP;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,aAAP,MAA0B,0CAA1B;AACA,OAAOC,eAAP,MAA4B,8CAA5B;AAEA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,QAAP,MAAqB,UAArB;;AAEA,MAAMC,GAAG,GAAG,IAAID,QAAQ,CAACE,GAAb,CAAiB;EAC3BC,MAAM,EAAE;AADmB,CAAjB,CAAZ;;AAGA,MAAMD,GAAN,SAAkBV,SAAlB,CAA4B;EAE1BY,WAAW,GAAG;IACZ;;IADY,KASdC,qBATc,GASUC,IAAD,IAAU;MAChC,MAAMC,YAAY,GAAID,IAAI,CAACE,OAAL,CAAa,CAAb,EAAgBF,IAAhB,CAAqBG,OAArB,CAA6B,CAA7B,EAAgCC,WAAhC,CAA4CC,YAAlE;MACA,MAAMC,KAAK,GAAGC,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAAd;MACA,MAAMC,KAAK,GAAGC,MAAM,CAACJ,KAAK,CAACG,KAAP,CAApB;MACA,MAAME,MAAM,GAAGD,MAAM,CAACJ,KAAK,CAACK,MAAP,CAArB;MACC,OAAO;QACLC,OAAO,EAAEX,YAAY,CAACY,QAAb,GAAwBJ,KAD5B;QAELK,MAAM,EAAEb,YAAY,CAACc,OAAb,GAAuBJ,MAF1B;QAGLK,QAAQ,EAAEP,KAAK,GAAIR,YAAY,CAACgB,SAAb,GAAyBR,KAHvC;QAILS,SAAS,EAAEP,MAAM,GAAIV,YAAY,CAACkB,UAAb,GAA0BR;MAJ1C,CAAP;IAMD,CApBa;;IAAA,KAsBdS,cAtBc,GAsBIC,GAAD,IAAS;MACxB,KAAKC,QAAL,CAAc;QAACD;MAAD,CAAd;IACD,CAxBa;;IAAA,KAyBdE,aAzBc,GAyBGC,KAAD,IAAW;MACzB,KAAKF,QAAL,CAAc;QAACG,KAAK,EAAED,KAAK,CAACE,MAAN,CAAaC;MAArB,CAAd;IACD,CA3Ba;;IAAA,KA6BdC,cA7Bc,GA6BG,MAAM;MACrB,KAAKN,QAAL,CAAc;QAACO,QAAQ,EAAE,KAAKC,KAAL,CAAWL;MAAtB,CAAd;MAEA9B,GAAG,CAACoC,MAAJ,CAAWC,OAAX,CAAmBtC,QAAQ,CAACuC,iBAA5B,EAA+C,KAAKH,KAAL,CAAWL,KAA1D,EACCS,IADD,CACMC,QAAQ,IAAI,KAAKf,cAAL,CAClB,KAAKrB,qBAAL,CAA2BoC,QAA3B,CADkB,CADlB,EAGCC,KAHD,CAGOC,GAAG,IACRC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAJF;IAOD,CAvCa;;IAEZ,KAAKP,KAAL,GAAa;MACXL,KAAK,EAAE,EADI;MAEXI,QAAQ,EAAE,EAFC;MAGXR,GAAG,EAAE;IAHM,CAAb;EAKD;;EAiCDmB,MAAM,GAAG;IAGP,MAAMC,aAAa,GAAG,MAAOC,IAAP,IAAgB;MACrCJ,OAAO,CAACC,GAAR,CAAYG,IAAZ,EADqC,CAEpC;MACA;MACA;;MACA,MAAMjD,QAAQ,CAACiD,IAAD,CAAd;IACD,CAND;;IAQA,MAAMC,eAAe,GAAIC,SAAD,IAAe;MACrCN,OAAO,CAACC,GAAR,CAAYK,SAAZ;IACD,CAFD;;IAGA,oBACE;MAAK,SAAS,EAAC,MAAf;MAAA,wBACE;QAAK,SAAS,EAAC,WAAf;QAAA,uBACF,QAAC,SAAD;UACE,EAAE,EAAC,aADL;UAEE,IAAI,EAAEH,aAFR;UAGE,MAAM,EAAEE,eAHV;UAIE,OAAO,EAAE;YACPE,UAAU,EAAE;cACVC,KAAK,EAAE;gBACLnB,KAAK,EAAE;cADF;YADG,CADL;YAMPoB,QAAQ,EAAE,GANH;YAOPC,aAAa,EAAE;cACbC,MAAM,EAAE;gBACNC,OAAO,EAAE;kBACPC,MAAM,EAAE,IADD;kBAEPC,IAAI,EAAE;gBAFC,CADH;gBAKNC,OAAO,EAAE;kBACPF,MAAM,EAAE,IADD;kBAEPC,IAAI,EAAE;gBAFC,CALH;gBASNE,MAAM,EAAE;cATF,CADK;cAYbC,KAAK,EAAE;gBACLC,IAAI,EAAE;kBACJC,QAAQ,EAAE;gBADN,CADD;gBAILC,OAAO,EAAE;kBACPC,QAAQ,EAAE,GADH;kBAEPC,QAAQ,EAAE;gBAFH;cAJJ;YAZM,CAPR;YA6BPC,SAAS,EAAE;cACTf,KAAK,EAAE;gBACLnB,KAAK,EAAE;cADF,CADE;cAITmC,KAAK,EAAE;gBACLhB,KAAK,EAAE,SADF;gBAELa,QAAQ,EAAE,GAFL;gBAGLR,MAAM,EAAE,IAHH;gBAILY,OAAO,EAAE,GAJJ;gBAKLtD,KAAK,EAAE;cALF,CAJE;cAWTuD,UAAU,EAAE;gBACVb,MAAM,EAAE;cADE,CAXH;cAcTc,IAAI,EAAE;gBACJC,SAAS,EAAE,MADP;gBAEJf,MAAM,EAAE,IAFJ;gBAGJgB,QAAQ,EAAE;kBACRC,OAAO,EAAE;gBADD,CAHN;gBAMJC,MAAM,EAAE,KANJ;gBAOJC,KAAK,EAAE,CAPH;gBAQJC,QAAQ,EAAE;cARN,CAdG;cAwBTC,MAAM,EAAE;gBACNC,OAAO,EAAE;kBACPtB,MAAM,EAAE,IADD;kBAEPuB,IAAI,EAAE;gBAFC,CADH;gBAKN/C,KAAK,EAAE;cALD,CAxBC;cA+BToC,OAAO,EAAE;gBACPpC,KAAK,EAAE;cADA,CA/BA;cAkCTgD,KAAK,EAAE;gBACLC,IAAI,EAAE;cADD,CAlCE;cAqCTC,IAAI,EAAE;gBACJlD,KAAK,EAAE;kBAAEmD,GAAG,EAAE,CAAP;kBAAUC,GAAG,EAAE;gBAAf;cADH;YArCG,CA7BJ;YAsEPC,YAAY,EAAE;UAtEP;QAJX;UAAA;UAAA;UAAA;QAAA;MADE;QAAA;QAAA;QAAA;MAAA,QADF,eAiFF,QAAC,UAAD;QAAA;QAAA;QAAA;MAAA,QAjFE,eAkFF,QAAC,IAAD;QAAA;QAAA;QAAA;MAAA,QAlFE,eAmFF,QAAC,aAAD;QAAe,aAAa,EAAE,KAAKzD,aAAnC;QAAkD,cAAc,EAAG,KAAKK;MAAxE;QAAA;QAAA;QAAA;MAAA,QAnFE,eAoFF,QAAC,IAAD;QAAA;QAAA;QAAA;MAAA,QApFE,eAqFF,QAAC,eAAD;QAAiB,QAAQ,EAAE,KAAKE,KAAL,CAAWD;MAAtC;QAAA;QAAA;QAAA;MAAA,QArFE;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EA6FH;;AArJ2B;;AAyJ5B,eAAejC,GAAf"},"metadata":{},"sourceType":"module"}